# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# –≠—Ç–æ—Ç –∫–æ–¥ –≤—ã–≤–æ–¥–∏—Ç –∏ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON, –∏ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ Pydentic
# –¢—É—Ç –µ—Å—Ç—å –≤–∞–ª–∏–¥–∞—Ü–∏—è –∏ –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞ JSON –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —É—Å–ª–æ–≤–∏—è–º–∏, –æ–ø–∏—Å–∞–Ω–Ω—ã–º–∏ –≤ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–µ,
# –∏ –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–æ—Ä–º–∞—Ç–µ Pydentic
# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

from pydantic import BaseModel, Field, EmailStr, ValidationError, model_validator
import json

# --- –ú–æ–¥–µ–ª–∏ –¥–∞–Ω–Ω—ã—Ö ---
class Address(BaseModel):
    city: str
    street: str
    house_number: int = Field(..., gt=0)

class User(BaseModel):
    name: str
    age: int = Field(..., gt=0, lt=100)
    email: EmailStr
    is_employed: bool
    address: Address
    
    @model_validator(mode="after")
    def check_employment_and_age(self) -> 'User':
        if self.is_employed and (self.age < 18 or self.age > 65):
            raise ValueError("–†–∞–±–æ—Ç–∞—é—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 18 –¥–æ 65 –ª–µ—Ç")
        return self

# --- –°–ª–æ–≤–∞—Ä—å (Python-–æ–±—ä–µ–∫—Ç) ---
data_dict = {
    "name": "Emma",
    "age": 12,
    "email": "emma@test.com",
    "is_employed": False,
    "address": {
        "city": "Stuttgart",
        "street": "Blumen Str",
        "house_number": 123
    }
}
# --- –í–∞–ª–∏–¥–∞—Ü–∏—è —Å–ª–æ–≤–∞—Ä—è ---
try:
    user = User.model_validate(data_dict, strict=True)
    print("\n‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è Pydentic —Ñ–æ—Ä–º–∞—Ç–∞ —É—Å–ø–µ—à–Ω–∞:", user)
except ValidationError as e:
    print("‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è Pydentic —Ñ–æ—Ä–º–∞—Ç–∞ —É—Å–ø–µ—à–Ω–∞ Validation error:", e)

json_string = """{
    "name" : "Emma",
    "age": 45,
    "email" : "emma@test.com",
    "is_employed" : true,
    "address" : {
        "city" : "Stuttgart",
        "street" : "Blumen Str",
        "house_number" : 123
        }
    }
"""

# --- –í–∞–ª–∏–¥–∞—Ü–∏—è JSON-—Å—Ç—Ä–æ–∫–∏ ---
try:
    user = User.model_validate_json(json_string, strict=True)
    print("‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è —Å—Ç—Ä–æ–∫–∏ JSON —Ñ–æ—Ä–º–∞—Ç–∞:", user)
except ValidationError as e:
    print("‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è —Å—Ç—Ä–æ–∫–∏ JSON —Ñ–æ—Ä–º–∞—Ç–∞ –Ω–µ –ø—Ä–æ—à–ª–∞. Validation error:", e)


# --- –°–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞—Ç–Ω–æ ---
user_dict = user.model_dump()
print("\nüîÅ –°–ª–æ–≤–∞—Ä—å:", user_dict)

user_json = user.model_dump_json(indent=4)
print("\nüîÅ JSON:\n", user_json)